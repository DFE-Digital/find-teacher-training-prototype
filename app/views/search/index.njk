{% extends "_layouts/default.njk" %}

{% set title = "Find courses by location or by training provider" %}
{% set errorMessage = "Select find courses by location or by training provider" %}

{% block pageTitle %}
{{ "Error: " if showError }}{{ title + " - " if title }}{{ caption + " - " if caption }}{{ serviceName }} - GOV.UK
{% endblock %}

{% block pageNavigation %}

{% endblock %}

{% block content %}

  {% include "_includes/error-summary.njk" %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <form action="/search" method="post" accept-charset="utf-8" novalidate>

        {% set locationHtml %}
          {{ govukInput({
            id: 'location',
            name: "location",
            label: {
              text: "Postcode, town or city"
            },
            value: data.location,
            autocomplete: 'off',
            formGroup: {
              classes: "govuk-!-margin-bottom-0"
            }
          }) }}
          <div id="location-autocomplete" class="govuk-body"></div>
        {% endset %}

        {% set providerHtml %}
          {{ govukInput({
            id: "provider",
            name: "provider",
            label: {
              text: "School, university or other training provider"
            },
            hint: {
              text: "Enter the name or provider code"
            },
            value: data.provider,
            formGroup: {
              classes: "govuk-!-margin-bottom-0"
            }
          }) }}
          <div id="provider-autocomplete" class="govuk-body"></div>
        {% endset %}

        {{ govukRadios({
          name: "q",
          fieldset: {
            legend: {
              text: title,
              isPageHeading: true,
              classes: "govuk-fieldset__legend--l"
            }
          },
          errorMessage: {
            text: errorMessage
          } if showError,
          items: [{
            value: "location",
            text: "By city, town or postcode",
            checked: (data.q == "location"),
            conditional: {
              html: locationHtml
            }
          }, {
            value: "england",
            text: "Across England",
            checked: (data.q == "england")
          }, {
            divider: "or"
          }, {
            value: "provider",
            text: "By school, university or other training provider",
            checked: (data.q == "provider"),
            conditional: {
              html: providerHtml
            }
          }]
        }) }}

        {{ govukButton({
          text: "Continue"
        }) }}

      </form>

    </div>
  </div>
{% endblock %}

{% block pageScripts %}
  <script src="/public/javascripts/accessible-autocomplete.min.js"></script>
  <script src="/public/javascripts/debounce.js"></script>
  <script src="/public/javascripts/init-autocomplete.js"></script>

  <script type="text/javascript">
  initAutocomplete({
    element: "location-autocomplete",
    input: "location",
    path: "/location-suggestions",
  });

  initAutocomplete({
    element: "provider-autocomplete",
    input: "provider",
    path: "/provider-suggestions",
  });
  </script>
{% endblock %}
